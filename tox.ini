[tox]
envlist =
    check-{style,build}
    test{,-pyargs,-warnings,-cov}
    build-{docs,dist}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#

[testenv:check-style]
description = check code style, e.g. with flake8
skip_install = true
deps =
    ruff
commands =
    ruff . {posargs}

[testenv:check-build]
description = check build sdist/wheel and a strict twine check for metadata
skip_install = true
deps =
    build
    twine>=3.3
commands =
    python -m build .
    twine check --strict dist/*

[testenv]
description =
    run tests
    pyargs: with --pyargs on installed package
    warnings: treating warnings as errors
    cov: with coverage
    xdist: using parallel processing
pass_env =
    TOXENV
    CI
    CODECOV_*
    HOME
    CRDS_*
extras =
    test
deps =
    roman-datamodels
    git+https://github.com/spacetelescope/jwst
    cov: pytest-cov
    xdist: pytest-xdist
commands_pre =
    pip uninstall --yes crds
    ./install
    ./setup_test_cache $CRDS_TEST_ROOT
    pip freeze
commands =
    pytest \
    cov: --cov --cov-report=xml --cov-report=term-missing \
    warnings: -W error \
    xdist: -n auto \
    pyargs: {toxinidir}/docs --pyargs crds \
    {posargs}

[testenv:build-docs]
description = invoke sphinx-build to build the HTML docs
skip_install = true
extras =
    docs
commands =
    sphinx-build -W documentation/crds_users_guide/source documentation/crds_users_guide/_build

[testenv:build-dist]
description = build wheel and sdist
skip_install = true
deps =
    build
commands =
    python -m build .